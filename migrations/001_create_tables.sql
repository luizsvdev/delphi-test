-- Script para criar as tabelas do sistema de gestão de granjas

-- Tabela para armazenar os lotes de aves
CREATE TABLE TAB_LOTE_AVES (
    ID_LOTE NUMBER PRIMARY KEY,
    DESCRICAO VARCHAR2(100) NOT NULL,
    DATA_ENTRADA DATE DEFAULT SYSDATE,
    QUANTIDADE_INICIAL NUMBER NOT NULL,
    PESO_MEDIO_GERAL NUMBER(10, 2) DEFAULT 0
);

-- Sequência para autoincremento do ID_LOTE
CREATE SEQUENCE SEQ_LOTE_AVES START WITH 1 INCREMENT BY 1;

-- Tabela para registrar as pesagens de um lote
CREATE TABLE TAB_PESAGEM (
    ID_PESAGEM NUMBER PRIMARY KEY,
    ID_LOTE_FK NUMBER,
    DATA_PESAGEM DATE DEFAULT SYSDATE,
    PESO_MEDIO NUMBER(10, 2) NOT NULL,
    QUANTIDADE_PESADA NUMBER NOT NULL,
    CONSTRAINT FK_LOTE_PESAGEM FOREIGN KEY (ID_LOTE_FK) REFERENCES TAB_LOTE_AVES(ID_LOTE)
);

-- Sequência para autoincremento do ID_PESAGEM
CREATE SEQUENCE SEQ_PESAGEM START WITH 1 INCREMENT BY 1;

-- Tabela para registrar as mortalidades de um lote
CREATE TABLE TAB_MORTALIDADE (
    ID_MORTALIDADE NUMBER PRIMARY KEY,
    ID_LOTE_FK NUMBER,
    DATA_MORTALIDADE DATE DEFAULT SYSDATE,
    QUANTIDADE_MORTA NUMBER NOT NULL,
    OBSERVACAO VARCHAR2(255),
    CONSTRAINT FK_LOTE_MORTALIDADE FOREIGN KEY (ID_LOTE_FK) REFERENCES TAB_LOTE_AVES(ID_LOTE)
);

-- Sequência para autoincremento do ID_MORTALIDADE
CREATE SEQUENCE SEQ_MORTALIDADE START WITH 1 INCREMENT BY 1;

COMMIT;

-- Exemplo de inserção de um lote para testes
INSERT INTO TAB_LOTE_AVES (ID_LOTE, DESCRICAO, DATA_ENTRADA, QUANTIDADE_INICIAL)
VALUES (SEQ_LOTE_AVES.NEXTVAL, 'Lote de Frangos de Corte 2025/1', TO_DATE('2025-09-01', 'YYYY-MM-DD'), 1000);

COMMIT;
